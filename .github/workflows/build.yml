name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  tofu_version: '1.10.2'
  tg_version: '0.83.0'
  ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app_name: ['my', 'buy', 'get', 'next', 'datasets']

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: '.nvmrc'

      - name: Set app
        run: |
          touch .env
          echo IMMICH_APP="${{ matrix.app_name }}.immich.app" >> .env

      - name: Use futopay-test
        if: ${{ env.ENVIRONMENT == 'dev' }}
        run: |
          echo PUBLIC_IMMICH_PAY_HOST=https://futopay-test.azurewebsites.net >> .env

      - name: Run npm install
        run: npm ci

      - name: Run build
        env:
          PUBLIC_CF_TURNSTILE_SITE: ${{ secrets.CF_TURNSTILE_DEFAULT_INVISIBLE_SITE_KEY }}
        run: npm run build

      - name: Upload build output
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build-frontend-output-${{ matrix.app_name }}
          include-hidden-files: true
          path: build
          retention-days: 1

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app_name: ['datasets']
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: '.nvmrc'

      - name: Run npm install
        run: npm ci
        working-directory: 'apps/${{ matrix.app_name }}.immich.app/backend'

      - name: Build backend
        run: npx wrangler build
        working-directory: 'apps/${{ matrix.app_name }}.immich.app/backend'

      - name: Upload build output
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build-backend-output-${{ matrix.app_name }}
          path: 'apps/${{ matrix.app_name }}.immich.app/backend/dist'
          retention-days: 1

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    strategy:
      fail-fast: false
      matrix:
        app_name: ['datasets', 'next', 'my', 'buy', 'get']
    env:
      TF_VAR_app_name: ${{ matrix.app_name }}
      TF_VAR_stage: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || '' }}
      TF_VAR_dist_dir: ${{github.workspace}}/dist/backend
      OP_SERVICE_ACCOUNT_TOKEN: ${{ github.ref == 'refs/heads/main' && secrets.OP_TF_PROD_ENV || secrets.OP_TF_DEV_ENV }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Get build artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: 'build-frontend-output-${{ matrix.app_name }}'
          path: '${{ github.workspace }}/dist/frontend'

      - name: Check if the app has a backend folder
        id: check-backend
        run: |
          if [ -d "apps/${{ matrix.app_name }}.immich.app/backend" ]; then
            echo "has_backend=true" >> $GITHUB_ENV
          else
            echo "has_backend=false" >> $GITHUB_ENV
          fi

      - name: Get backend build artifact
        if: ${{ env.has_backend == 'true' }}
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: 'build-backend-output-${{ matrix.app_name }}'
          path: '${{ github.workspace }}/dist/backend'

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@707af61a6c8b4fa7f9476328c035208fba6b54d7 # v2

      - name: Install Terragrunt
        uses: eLco/setup-terragrunt@2c5116f8979bb261072ef57c97ac026cd9c27434 # v1
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: 'Install OpenTofu'
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1
        with:
          tofu_version: ${{ env.tofu_version }}
          tofu_wrapper: false

      - name: Deploy All
        working-directory: ${{ github.workspace }}/deployment
        run: |
          INCLUDE_DIRS=""
          if [ "${{ env.has_backend }}" = "true" ]; then
            INCLUDE_DIRS='**/workers/${{ matrix.app_name }}'
          fi

          op run --env-file='.env' -- terragrunt run --all apply \
            --non-interactive \
            --parallelism 1 \
            --queue-include-dir='**/!(workers)/**' \
            --queue-include-dir="$INCLUDE_DIRS"

      - name: Cloudflare Deploy Output
        id: deploy-output
        working-directory: ${{ github.workspace }}/deployment/modules/cloudflare/static-pages
        run: |
          echo "output=$(op run --no-masking --env-file='../../../.env' -- terragrunt output -json | jq -c .)" >> $GITHUB_OUTPUT

      - name: Publish Frontend to Cloudflare Pages
        uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca # v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN_PAGES_UPLOAD }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ fromJson(steps.deploy-output.outputs.output).pages_project_name.value }}
          directory: 'dist/frontend'
          branch: ${{ fromJson(steps.deploy-output.outputs.output).pages_branch.value }}
          wranglerVersion: '3'

      - name: Comment
        uses: actions-cool/maintain-one-comment@4b2dbf086015f892dcb5e8c1106f5fccd6c1476b # v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          number: ${{ github.event.number }}
          body: |
            ðŸ“– Preview of ${{ matrix.app_name }}.immich.app deployed to [${{ fromJson(steps.deploy-output.outputs.output).immich_subdomain.value }}](https://${{ fromJson(steps.deploy-output.outputs.output).immich_subdomain.value }})
          emojis: 'rocket'
          body-include: '<!-- ${{ matrix.app_name }} PR URL -->'
